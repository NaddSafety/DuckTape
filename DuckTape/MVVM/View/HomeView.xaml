<!-- HomeView.xaml -->
<UserControl x:Class="DuckTape.MVVM.View.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DuckTape.MVVM.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="•" Margin="0,0,5,0"/>
                                <ContentPresenter/>
                            </StackPanel>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="LightBlue"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Padding" Value="12,7"/>
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="Tag" Value="mouse-over"/>
                    <Setter Property="Command" Value="{Binding DataContext.ChangeBackgroundColorCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Button x:Name="Policy_Copy" Content="" HorizontalAlignment="Left" Height="58" Margin="273,353,0,0" VerticalAlignment="Top" Width="736" RenderTransformOrigin="0.5,0.5"
                  >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="red"/>

                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="1000" Height="25" CornerRadius="12"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button x:Name="Buttona" Content="List" HorizontalAlignment="Left" Margin="363,361,0,0" VerticalAlignment="Top" Height="103" Width="147" Click="Button_Click" >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="darkRed"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="100" Height="25" CornerRadius="12"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <ListBox x:Name="DeviceList" Margin="9,198,380,24" Foreground="DarkRed" Background="#FF1F1933" BorderBrush="#FF1F1933">
            <ListBox.Effect>
                <DropShadowEffect/>
            </ListBox.Effect>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <TextBlock Text="{Binding Caption}" FontWeight="Bold"/>
                        <TextBlock Text="{Binding Description}"/>
                        <TextBlock Text="{Binding DeviceID}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Slider x:Name="slider1" HorizontalAlignment="Left" Margin="26,-21,0,0" VerticalAlignment="Top" Width="179" Minimum="3" Maximum="8" Foreground="#8b0000" BorderBrush="#8b0000" Background="#8b0000" Height="19" RenderTransformOrigin="0.5,0.5">
            <Slider.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="230"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Slider.RenderTransform>
        </Slider>
        <Button Content=""
                HorizontalAlignment="Left"
                Margin="251,74,0,0"
                VerticalAlignment="Top"
                Click="Button_Click_2"
                >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Red"/>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="160" Height="25" CornerRadius="12"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Restart" HorizontalAlignment="Left" Height="55" Margin="57,94,0,0" VerticalAlignment="Top" Width="116" Click="Button_Click_3"
                  >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#ff3131"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="100" Height="25" CornerRadius="12"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button Content="Secure UAC" HorizontalAlignment="Left" Height="52" Margin="544,412,0,0" VerticalAlignment="Top" Width="116" Click="Button_Click_5"
                  >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="red"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="100" Height="25" CornerRadius="12"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Label Content="Must Run As Admin" HorizontalAlignment="Left" Height="36" Margin="518,398,0,0" VerticalAlignment="Top" Width="122" Foreground="SpringGreen"/>
        <Button x:Name="autoStartButton" Content="Auto Start" Click="AutoStartButton_Click" HorizontalAlignment="Left" Height="55" Margin="536,322,0,0" VerticalAlignment="Top" Width="116"
                  >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="red"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="120" Height="25" CornerRadius="12"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="EnableDisableButton" Content="Disable ⊞Win Key" Click="EnableDisableButton_Click" HorizontalAlignment="Left" Height="54" Margin="471,73,0,0" VerticalAlignment="Top" Width="146">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Content" Value="content"/>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="180" Height="25" CornerRadius="12" Background="{TemplateBinding Background}" Margin="-8,15,-34,15">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>

        <Button x:Name="Policy" Content="Policy Editor" Click="Policyeditor" HorizontalAlignment="Left" Height="55" Margin="542,158,0,0" VerticalAlignment="Top" Width="116"
                  >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="red"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="160" Height="25" CornerRadius="12"
                        Background="{TemplateBinding Background}" Margin="-50,15,6,15">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Po" Click="Por" HorizontalAlignment="Left" Height="55" Margin="502,243,0,0" VerticalAlignment="Top" Width="116" RenderTransformOrigin="0.5,0.5"
                  >
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="179.552"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Button.RenderTransform>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="red"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="140" Height="25" CornerRadius="12"
                        Background="{TemplateBinding Background}" Margin="-34,15,10,15">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
            <CheckBox x:Name="checkBox" AutomationProperties.ItemType="fill" HorizontalAlignment="Left" VerticalAlignment="Center">
                <DockPanel>
                    <TextBlock Text="Mouse Only" DockPanel.Dock="Right" RenderTransformOrigin="0.5,0.5">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="180"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </DockPanel>
            </CheckBox>
        </Button>
        <Button x:Name="P1" Content="Threat reDucktion" Click="reduction" HorizontalAlignment="Left" Height="55" Margin="544,-2,0,0" VerticalAlignment="Top" Width="116"
                  >
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="red"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="200" Height="25" CornerRadius="12"
                        Background="{TemplateBinding Background}" Margin="-92,15,8,15">
                        <ContentPresenter VerticalAlignment="Center"
                            HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Label x:Name="label21" Content="{Binding Value, ElementName=slider1}" HorizontalAlignment="Left" Margin="282,73,0,0" VerticalAlignment="Top"/>

    </Grid>

</UserControl>